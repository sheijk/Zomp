


(func (ptr ast) makeSampleAst () (
/// a simple quotation
  `(main arg0 (arg1 arg10 arg11) arg2 (arg3 (arg30 arg300 arg 301) arg31))
  ))

(xmacro macroPrint (
/// a simple macro using a quotation
  `(printlnString "Generated by a macro")
  ))

(xmacro dotwice code (
/// simple antiquotations
  `((#code) (#code))
  ))

/// TODO nested quotations and antiquotations
'(fooo #bar) -> antiquotations don't work here
`(foo #bar) -> antiquotations work here

alternativen:
`(foo bar `(nested ##(replaced)))
(replace placeholder expr `(foo bar `(nested placeholder)))
`(foo bar `(nested #_2(replaced)))

(func int main () (
  (printlnString "Sample ast:")
  (printAst (makeSampleAst) 0)
  (macroPrint)
  (dotwice (printlnString "printed again and again"))
  
  (ret 1)
  ))
  
