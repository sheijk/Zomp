/**
Demonstrates using OpenGL.

Enter this into toplevel to load libs:
!load libglfw.dylib
!load libGLEW.dylib

You will need to copy the file libglfw.dylib from the lib/macosx dir
of GLFW 2.6 into the zomp main dir

Conventions for function names:
  send* - sending vertex data (to be included in glbegin/end)
  render* - send geometry (outside of glBegin/glEnd)
  draw* - setup material and render
*/

(include "opengl20.zomp")
(include "glfw.zomp")

(include "tests/glutils.zomp")

(const int windowWidth 400)
(const int windowHeight 300)

(var bool initialized false)

(func bool init () (
  (template assertGLTrue code (
    (if (int.notEqual GL_TRUE #code)
      ((printlnString "Init failed")
       (printAst `#code 0)
       (ret false))
      ())
    ))
  
  (if initialized (ret true) ())

  (assertGLTrue (glfwInit))
  (assertGLTrue (glfwOpenWindow windowWidth windowHeight 8 8 8 8 16 0 GLFW_WINDOW))

  (assign initialized true)
  (ret true)
  ))

(func GLuint makeBillboardGShader () (
  (var GLuint shader (createShader
"
varying vec3 normal;
void main(void) {
  gl_Position = ftransform();
  normal = normalize( gl_Position.xyz );
}
"

"
varying vec3 normal;

void main(void) {
  gl_FragColor = vec4( normal, 1.0 );
}
"))
  (ret shader)
  ))

(func GLuint makeBillboard ((int width) (int height)) (
  (var (ptr framebuffer) fbo (fbo_make width height))
  (fbo_attachColorTexture fbo)
  (fbo_create fbo)
  (fbo_bind fbo)

  (const GLuint shader (makeBillboardGShader))
  
  (saveTransforms
    (glClearColor .0 1.0 0.0 0.0)
    (glClear (int.or GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))
    
    (glMatrixMode GL_PROJECTION)
    (glLoadIdentity)
    (gluPerspective 90.0d 1.0d 1.0d 100.0d)
    (glMatrixMode GL_MODELVIEW)
    (glLoadIdentity)
    (gluLookAt
      0.d 0.d 1.d
      0.d 0.d 0.d
      0.d 1.d 0.d)

    (glUseProgram shader)
    (rendergl GL_TRIANGLE_FAN
      (glColor4f 1. 0. 0. 1.)
      (glVertex3f 0. 0. 0.)
      (sendCircle)
      )
    (glUseProgram 0)
    )

  (glDeleteProgram shader)
    
  (fbo_makeColorTexture fbo)
  (fbo_unbind fbo)
    
  (ret (getField fbo colorTexture))
  ))
  
(var double autoTimeout 1.0)

(func GLuint makeMainShader () (
  (createShader
"
varying vec2 texCoord;

void main(void) {
  gl_Position = ftransform();
  texCoord = gl_MultiTexCoord0.xy;
}"

"
uniform vec4 lightPos;
uniform sampler2D texture;
varying vec2 texCoord;

void main(void) {
  vec4 texval = texture2D( texture, texCoord );
  float alpha = texval.a;
  vec3 normal = texval.xyz;

  vec3 lightDir = normalize( lightPos.xyz );
  float intensity = dot( lightDir, normal );
  intensity += 0.3;

  gl_FragColor = vec4( intensity, intensity, intensity, alpha );
}
")
  ))

(func int rand ())

(func int random ((int max)) (
  (ret (int.srem (rand) max))
  ))
  
(template float.neg x (float.sub 0. #x))
  
(func int main () (
  (if (bool.not (init)) (ret 100) ())

  (glfwPollEvents)
  (glfwPollEvents)


  (const int sphereCount 1000)
  (var (ptr float) positions (malloc float (int.mul 3 sphereCount)))
  (template foreachSphere indexVar posVar code (
    (var int #indexVar 0)
    (var (ptr float) #posVar (nullptr float))
    (while (int.sless #indexVar sphereCount) (
      (assign #posVar (ptradd positions (int.mul #indexVar 3)))
      #code
      (assign #indexVar (int.add #indexVar 1))
      ))
    ))

  (template frand ((int.toFloat (int.sub (random 30) 15))))

  (foreachSphere index pos (
    (store (ptradd pos 0) (frand))
    (store (ptradd pos 1) (frand))
    (store (ptradd pos 2) (frand))
    ))
    

  (var bool abort false)
  (var double startTime (glfwGetTime))

  (var GLuint billboard (makeBillboard 1024 1024))
  (var GLuint sphereShader (makeMainShader))
  
  (while (bool.not abort) (
    (if (int.equal (glfwGetKey GLFW_KEY_ESC) GL_TRUE) (
      (assign abort true)
      )())

    (if (double.ogreater (double.sub (glfwGetTime) startTime) autoTimeout)
      (assign abort true) ())

    (glEnable GL_DEPTH_TEST)
    (glDepthFunc GL_LEQUAL)
    (glEnable GL_ALPHA_TEST)
    (glAlphaFunc GL_NOTEQUAL 0.0)

    (var int width 0)
    (var int height 0)
    (glfwGetWindowSize (ptr width) (ptr height))
    (var double aspect (double.fdiv (int.toDouble width) (int.toDouble height)))
    (glViewport 0 0 width height)

    (glClearColor 0.0 0.0 0.0 1.0)
    (glClear (int.or GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))
    
    (glMatrixMode GL_PROJECTION)
    (glLoadIdentity)
    (gluPerspective 90.0d aspect 1.0d 100.0d)
    (glMatrixMode GL_MODELVIEW)
    (glLoadIdentity)
    (glTranslatef -2. -1.5 -20.)

    (drawOrientationGrid)
    (const float sunAngle (double.toFloat (glfwGetTime)))
    
    (glUseProgram sphereShader)
    (glBindTexture2D billboard)
    (const GLuint lightPosL (glGetUniformLocation sphereShader "lightPos"))
    (glUniform4f lightPosL (sinf sunAngle) (cosf sunAngle) 2.0 1.0)
    (renderQuad 1.0)
    
    (foreachSphere index2 pos2 (
      (var float x (load (ptradd pos2 0)))
      (var float y (load (ptradd pos2 1)))
      (var float z (load (ptradd pos2 2)))
      
      (glTranslatef x y z)
      (renderQuad (float.fdiv 1.0 2.0))
      (glTranslatef (float.neg x) (float.neg y) (float.neg z))
      ))
    
    (glBindTexture2D 0)
    (glUseProgram 0)
  
    (glfwSwapBuffers)
    (glfwPollEvents)
    ))

  (glDeleteProgram sphereShader)
  (glDeleteTextures 1 (ptr billboard))

  (drawPausedOverlay)
  (ret 0)
  ))

(testf (
  (const int retval (main))
  (printString "Main returned ")
  (printInt retval)
  (println)
  ))

(func void long () ((assign autoTimeout 1000.0d) (test)))
(func void short () ((assign autoTimeout 1.0d) (test)))


  