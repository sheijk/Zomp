/**
Generates and shows several SH functions

!verify off

Enter this into toplevel to load libs:
!load libglfw.dylib
!load libGLEW.dylib
!load glut.dylib

You will need to copy the file libglfw.dylib from the lib/macosx dir
of GLFW 2.6 into the zomp main dir

Conventions for function names:
  send* - sending vertex data (to be included in glbegin/end)
  render* - send geometry (outside of glBegin/glEnd)
  draw* - setup material and render
*/

(include "opengl20.zomp")
(include "glfw.zomp")
(include "tests/glutils.zomp")
(include "glut.zomp")

(const int windowWidth 800)
(const int windowHeight 600)
(const float windowAspect 1.0)
(var bool initialized false)

(func bool init () (
  (template assertGLTrue code (
    (if (int.notEqual GL_TRUE #code) (
      (printlnString "Init failed")
      (printAst `#code 0)
      (ret false))
    ())))
  
  (if initialized (ret true) ())

  (assertGLTrue (glfwInit))
  (assertGLTrue (glfwOpenWindow windowWidth windowHeight 8 8 8 8 16 0 GLFW_WINDOW))
  (glewInit)

  //   (glfwSetWindowPos 300 1300) */

  (windowAspect = int.toFloat windowWidth /_f int.toFloat windowHeight)

  (assign initialized true)
  (ret true)
  ))

(func void clear ((float r) (float g) (float b) (float a)) (
  (glClearColor r g b a)
  (glClear (int.or GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))
  ))

(macro compareFunc type name compareF (
  (var cstring typeName (getField type id))

  (var (ptr ast) compareCode compareF)
  (addChilds compareCode `l `r)

  (ret `(func #typeName #name ((#typeName l) (#typeName r)) (
    (var bool cmp #compareCode)
    (branch cmp lgreater rgreater)
    (label lgreater)
    (ret l)
    (label rgreater)
    (ret r)
    )))
  ))

(compareFunc int int:max op>)
(compareFunc int int:min op<)

(compareFunc float float:max op>_f)
(compareFunc float float:min op<_f)

(compareFunc double double:max op>_d)
(compareFunc double double:min op<_d)

(func float fmodf ((float num) (float divisor)))

(func GLint gluBuild2DMipmaps (
  (GLenum target)
  (GLint internalFormat)
  (GLsizei width)
  (GLsizei height)
  (GLenum format)
  (GLenum type)
  ((ptr void) data) ))

/// turns 4 colors values in [0, 255] into an RGBA color suitable for OpenGL
(func int rgbaColor ((int r) (int g) (int b) (int a)) (
  (ret (a*256*256*256 + b*256*256 + g*256 + r))
  ))

(template array:set array index value (store (ptradd #array #index) #value))
(template array:get array index (load (ptradd #array #index)))
(template op[] array index (load (ptradd #array #index)))

(type float3
  (float x)
  (float y)
  (float z) )

(macro constructor type fields ... (
  (var cstring funcName (cstring:concat (getField type id) ":init"))
  (var (ptr ast) args `(((ptr #type) this)))
  (var (ptr ast) impl `())

  (forEachAstChild field fields (
    (const int fieldChildCount (getField field childCount))

    (var (ptr ast) fieldType (nullptr ast))
    (var cstring fieldName (nullptr char))
    
    (if (fieldChildCount == 1)
      ((fieldType = (simpleAst (getField field id)))
        (fieldName = getField (astChild field 0) id)
        )
      (// else
        (printlnString "Error: Expected (type name) for fields")
        (printAst field 2) (println)
        )
      )
    
    (addChild args field)

    (addChild impl `(setField this #fieldName #fieldName))
    ))
  
  (var (ptr ast) funcDef `(func void #funcName #args #impl))

  (ret funcDef)  
  ))

(constructor float3 (float x) (float y) (float z))

(func void float3:add (((ptr float3) l) ((ptr float3) r)) (
  (setField l x ((getField l x) +_f (getField r x)))
  (setField l y ((getField l y) +_f (getField r y)))
  (setField l z ((getField l z) +_f (getField r z)))
  ))


(func void plot ((int size) ((ptr float) values)) (
  (glBegin GL_LINE_STRIP)

  (const float delta (2.0 /_f int.toFloat size))

  (var float x -1.0)
  (for i 0 size (
    (const float y (array:get values i))
    (glVertex2f x y)
    (x = x +_f delta)
    ))
  
  (glEnd)
  ))


  
(func GLuint makeCubemap ((int size)) (
  (var GLuint texture (makeTexture))

  (glBindTexture GL_TEXTURE_CUBE_MAP texture)

  (var (ptr int) colors (malloc int 6))
  
  (store (ptradd colors 0) (rgbaColor 255 0 0 255))
  (store (ptradd colors 1) (rgbaColor 0 255 0 255))
  (store (ptradd colors 2) (rgbaColor 0 0 255 255))
  (store (ptradd colors 3) (rgbaColor 0 255 255 255))
  (store (ptradd colors 4) (rgbaColor 255 0 255 255))
  (store (ptradd colors 5) (rgbaColor 255 255 0 255))
  
  (var (ptr int) pixels (malloc int (size * size)))

  (for sideNum 0 6 (
    (const int target (GL_TEXTURE_CUBE_MAP_POSITIVE_X + sideNum))
    
    (var int c (load colors))
    (colors = ptradd colors 1)

    (for y 0 size (
      (for x 0 size (
        (const int pixelNum (y * size + x))
        (array:set pixels pixelNum c)
        ))
      ))
    
    (gluBuild2DMipmaps target GL_RGBA size size GL_RGBA GL_UNSIGNED_BYTE
      (cast (ptr void) pixels))
    
    ))

  (glBindTexture GL_TEXTURE_CUBE_MAP 0)
  
  (ret texture)
  ))
  
(func GLuint makeCubemapShader () (
  (var GLuint shader (createShader
    "
    varying vec3 texCoord;
    "
    
    "void main(void) {
      gl_Position = ftransform();
      
      vec4 dir = normalize( gl_Vertex );
      texCoord = dir.xyz;
      }
    "
    
    "
    uniform samplerCube texture;
    
    void main(void) {
      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0) + textureCube( texture, texCoord );
      }
    "))
  (ret shader)
  ))

(template onKey key code ...
  (if (isPressed #key) #code ()))


(type trackball
  /// rotation around y axis (in degrees)
  (float longitude)
  /// rotation around x axis (in degrees)
  (float latitude)
  (float distance)
  )

(func (ptr trackball) trackball:new ((float longitude) (float latitude) (float distance)) (
  (var (ptr trackball) this (malloc trackball))
  (setField this longitude longitude)
  (setField this latitude latitude)
  (setField this distance distance)
  (ret this)
  ))

(func void trackball:update (((ptr trackball) this) (float seconds)) (
  (var float rotationSpeed 90.0)
  (onKey GLFW_KEY_LSHIFT
    (rotationSpeed = rotationSpeed *_f 3.0))

  (template addToField name value
    (setField this #name (getField this #name +_f #value)) )
  
  (onKey GLFW_KEY_LEFT
    (addToField longitude (seconds *_f float.neg rotationSpeed)) )
  (onKey GLFW_KEY_RIGHT
    (addToField longitude (seconds *_f rotationSpeed)) )
  (onKey GLFW_KEY_UP
    (addToField latitude (seconds *_f rotationSpeed)) )
  (onKey GLFW_KEY_DOWN
    (addToField latitude (seconds *_f float.neg rotationSpeed)) )

  (setField this longitude (fmodf (getField this longitude) 360.0))
  (setField this latitude (float:max -90.0 (float:min 90.0 (getField this latitude))))
  ))

(func void trackball:transform (((ptr trackball) this)) (
  (glTranslatef 0. 0. (float.sub 1.0 (getField this distance)))
  (glRotatef (getField this latitude) 1. 0. 0.)
  (glRotatef (getField this longitude) 0. -1. 0.)
  ))


(macro arrayType elementType (
  (const cstring name (cstring:concat "array_" (getField elementType id)))
  (const cstring initName (cstring:concat name ":init"))
  
  (ret `(
    (type #name (int size) ((ptr #elementType) values))
    
    (func void #initName (((ptr #name) this) (int size)) (
      (setField this size size)
      (setField this values (malloc #elementType size))
      ))
    ))
  ))

(arrayType float)
(arrayType array_float)

(func int int:mod ((int v) (int div)) (
  (int.urem v div)
  ))

(func float sqrtf ((float x)))

(template mainloop code ... (
  (var bool abort false)

  (var double startTime (glfwGetTime))
  (var double lastTime startTime)
  
  (while (bool.not abort)
    (if (isPressed GLFW_KEY_ESC)
      (abort = true) ())

    (var double frameTime (glfwGetTime))
    (var double frameDur_d (frameTime -_d lastTime))
    (var float frameDur (double.toFloat frameDur_d))
    (lastTime = frameTime)

    #code
    
    (glfwPollEvents)
    (glfwSwapBuffers)
    )
  ))
  
(func float legendre ((int l) (int m) (float x)) (
  (var float pnm 1.0)

  (if (m > 0)
    (//then
      (var float somx2 (sqrtf( (1.0 -_f x) *_f (1.0 +_f x) )))
      (var float fact 1.0)
      (for i 1 (m+1) (
        (pnm = pnm *_f float.neg fact *_f somx2)
        (fact = fact +_f 2.0)
        ))
      )
    () )

  (if (l == m) (ret pnm) ())

  (var float pnmp1 (x *_f (2.0 *_f int.toFloat m +_f 1.0) *_f pnm))

  (if (l == m + 1) (ret pnmp1) ())
  
  (var float pll 0.0)

  (for ll (m+2) (l+1) (
    (pll = ( (2.0 *_f int.toFloat ll -_f 1.0) *_f x *_f pnmp1
      -_f (int.toFloat(m+ll) -_f 1.0) *_f pnm ) /_f int.toFloat (ll - m) )

    (pnm = pnmp1)
    (pnmp1 = pll)
    ))
    
  (ret pll)
  ))

(func int main () (
  (init)

  (times 10 (glfwPollEvents) )

  (var GLuint cubeShader (makeCubemapShader))
  (var GLuint cubemap (makeCubemap 512))

  (glMatrixMode GL_PROJECTION)
  (glLoadIdentity)
  (gluPerspective 90.0d (float.toDouble windowAspect) 1.0d 500.0d)
  
  (glMatrixMode GL_MODELVIEW)
  (glLoadIdentity)
  (gluLookAt
    10.0d 10.0d 10.0d
    0.0d 0.0d 0.0d
    0.0d 1.0d 0.0d)

  (glEnable GL_DEPTH_TEST)
  (glDepthFunc GL_LEQUAL)


  (var GLuint legendreDL (glGenLists 1))
  (glNewList legendreDL GL_COMPILE)
  
  (const int legendreSize 100)

  (for l 0 3 (
    (for m 0 (l+1) (
      
      (glBegin GL_LINE_STRIP)
      (for i 0 legendreSize (
        (var float x (-1.0 +_f 2.0 *_f (int.toFloat i /_f int.toFloat legendreSize)))
        (var float y (legendre l m x))
        (glVertex2f x y)
        ))
      (glEnd)
      
      )) // for m
    )) // for l

  (glEndList)

  (var (ptr trackball) cam (new trackball 45.0 10.0 10.0))

  (mainloop
    (trackball:update cam frameDur)

    (glMatrixMode GL_MODELVIEW)
    (glLoadIdentity)
    (trackball:transform cam)
    
    (clear 0. 0. 0. 1.)

    /* (drawOrientationGrid) */

    (glUseProgram cubeShader)
    (glBindTexture GL_TEXTURE_CUBE_MAP cubemap)
    (glutSolidSphere 5.0d 20 20)
    (glBindTexture GL_TEXTURE_CUBE_MAP 0)
    (glUseProgram 0)

    (saveTransforms
      (glRotatef 45.0 0. 1. 0.)
      (glTranslatef 0. 1. (4. +_f 2.))
      (const float scale 1.0)
      (glScalef (2.0 *_f scale) scale scale)
      
      (glColor4f 1. 1. 0. 1.)
      (glCallList legendreDL)

      (glTranslatef 0. 0. (-1.0 /_f 100.0))
      (glBegin GL_LINES)
      (glColor4f 1. 1. 1. 1.)
      (glVertex2f -1. 0.) (glVertex2f 1. 0.)
      (glVertex2f 0. -1.) (glVertex2f 0. 1.)
      (glEnd)

      (glPushAttrib (int.or GL_BLEND GL_DEPTH))
      (glDepthFunc GL_LESS)
      (glEnable GL_BLEND)
      (glBlendFunc GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA)
      (glColor4f 1. 1. 1. (1.0 /_f 4.0))
      (renderQuad 1.0)
      (glPopAttrib)
      )
    )

  (drawPausedOverlay)

  (glDeleteLists legendreDL 1)
  (glDeleteTextures 1 (ptr cubemap))
  (glDeleteShader cubeShader)

  (ret 0)
  ))

(func void makeScreenBlack () (
  (clear 0. 0. 0. 1.)
  (glfwSwapBuffers)
  ))

/* NSBundle* webKitBundle; */
/*     webKitBundle = [NSBundle bundleWithPath:@"/System/Library/Frameworks/WebKit.framework"]; */
/*     if (webKitBundle) { */
/*         _webkitAvailable = [webKitBundle load]; */
/*     } */
  