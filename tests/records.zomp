
/** define a type */
(type simple
  (count int)
  (foo float)
  )

(type simpleptr (ptr simple))

// (func int testStack () (seq
//   (var simple r)
//   (setField r count 3)
//   (setField r foo 1.0)
//   (field r count)
//   ))

(func void setCount (seq (simpleptr r) (int value)) (seq
  (var (ptr int) countPtr (fieldptr r count))
  (store countPtr value)
  ))

(func void setFoo (seq (simpleptr r) (float value)) (seq
  (var (ptr float) fooPtr (fieldptr r foo))
  (store fooPtr value)
  ))

(func int getCount (seq (simpleptr r)) (seq
  (var (ptr int) countPtr (fieldptr r count))
  (load countPtr)
  ))

(func float getFoo (seq (simpleptr r)) (seq
  (var (ptr float) fooPtr (fieldptr r foo))
  (load fooPtr)
  ))

(func (ptr simple) testMalloc () (seq
  (var (ptr simple) p (malloc simple))
  (setCount p 3)
  (setFoo p 1.0)
  p
  ))

(func void init (seq (simpleptr record)) (seq
  (setCount record 17)
  (setFoo record 1.0)
  (ret void)
  ))

(func int main () (seq
  (var simple r)
  (init (ptr r))
  (getCount (ptr r))
  ))

