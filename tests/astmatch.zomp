/**
 * Pattern matching for asts

!verify off
 */

(macro ifunc type nameAndArgs impl (
  (if (bool.not (cstring.equal (getField nameAndArgs id) "opcall"))
    (ret `(error "Invalid syntax")) ())

  (var cstring funcName (getField (astChild nameAndArgs 0) id))

  (var astp args (seqAst))
  (for childnum 1 (getField nameAndArgs childCount) (
    (var astp child (astChild nameAndArgs childnum))
    (if (ast:matchesShape child `(opjux _ _))
      (
        (var astp arg (ast:fromString (getField (astChild child 0) id)))
        (ast:addChild arg (ast:child child 1))
        (ast:addChild args arg)
        )
      (ret `(compiler:error "Child nr." #childnum #child "is invalid"))
      )
    ))

  (ret `(func #type #funcName #args (
    #impl
    )))
  ))

