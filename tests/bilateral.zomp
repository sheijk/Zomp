/**

!verify off

* Demonstrates a small animation using OpenGL
!load libglfw.dylib
!load libGLEW.dylib
*/

(include "opengl20.zomp")
(include "glfw.zomp")
(include "tests/glutils.zomp")

(var int windowWidth 800)
(var int windowHeight 600)
  
(runOnceFunc void init () (
  (glfwInit)
  (glfwOpenWindow windowWidth windowHeight 8 8 8 8 16 0 GLFW_WINDOW)
  (glewInit)
  (times 2 (glfwPollEvents))
  ))

(var float angle 0.0)

(func void bindTexture2D((GLuint texture)) (
  (glBindTexture GL_TEXTURE_2D texture)
  ))

(template gl:assertTrue checkCode
  (assert (GL_TRUE == #checkCode)))

(template gl:warnOnFalse code
  (if (GL_FALSE == #code)
    ( (printString "Assertion failed, code did not return GL_TRUE:\n")
      (printAst `#code 0) )
    ()))

(template withTexture2D texture code ... (
  (glEnable GL_TEXTURE_2D)
  (glBindTexture GL_TEXTURE_2D #texture)
  #code
  (glBindTexture GL_TEXTURE_2D 0)
  (glDisable GL_TEXTURE_2D)
  ))
  

(func GLuint makeBilateralShader () (
  (createShader
    " // varyings
    "

    " // vertex
    void main(void) {
      gl_Position = ftransform();
      gl_TexCoord[0] = gl_MultiTexCoord0;
      }
    "

    " // fragment
    uniform sampler2D texture;
    
    void main(void) {
      gl_FragColor = vec4( 1.0, 0.5, 0., 1. ) * texture2D( texture, gl_TexCoord[0].xy );
      }
    ")
  ))

(func int main () (
  (init)
  
  (glMatrixMode GL_PROJECTION)
  (glLoadIdentity)
  (const double aspect (double.fdiv (int.toDouble windowWidth) (int.toDouble windowHeight)))
  (gluPerspective (int.toDouble 90) aspect 1.0d 100.0d)

  (var float time 0.0)

  (const GLuint texture (makeTexture))
  (bindTexture2D texture)
  (gl:warnOnFalse (glfwLoadTexture2D "tests/monochrome200.tga" GLFW_BUILD_MIPMAPS_BIT))
  (bindTexture2D 0)

  (const GLuint bilateralShader (makeBilateralShader))
  
  (var bool running true)
  (while running (
    (assign time  (double.toFloat (glfwGetTime)))
    (assign angle (float.mul time 128.0))

    (autoSetupViewport)
    (glClearColor 0. 0. 0. 1.)
    (glClear (int.or GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))

    (glMatrixMode GL_MODELVIEW)
    (glLoadIdentity)
    (glTranslatef 0. 1. -4.)
    (glRotatef angle 0. 1. 0.)

    (drawCoordSys 8.0)

    (withTexture2D texture
      (glUseProgram bilateralShader)
      (drawFullscreenQuad)
      (glUseProgram 0)
      )

    (glfwSwapBuffers)
    (glfwPollEvents)
    (assign running (bool.not (isPressed GLFW_KEY_ESC)))
    ))

  (glDeleteShader bilateralShader)
  (glDeleteTextures 1 (ptr texture))
  
  (drawPausedOverlay)
  (glfwSwapBuffers)

  (glfwPollEvents)
  (ret 0)
  ))



