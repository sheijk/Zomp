///
/// Developing a simple instrumentation macro
///

macro tracing:instrument code:
  var ast* instrumentedCode ast:fromString("seq")

  forEachAstChild expr code:
    ast:addChild instrumentedCode ${printlnString "=> entering"}
    ast:addChild instrumentedCode ${ast:print $${#expr} 0}
    ast:addChild instrumentedCode expr
    ast:addChild instrumentedCode ${printlnString "<= leaving"}
  end

  ret instrumentedCode
end

func int main():
  tracing:instrument:
    var int x 10
    assign x (x + 10)
    printlnInt x

    var cstring foo "xxx"
    ast:print ${lalal #foo} 0

    template foo2 param:
      printString #param
    end

    foo2 "bar"
  end

  ret 0
end

